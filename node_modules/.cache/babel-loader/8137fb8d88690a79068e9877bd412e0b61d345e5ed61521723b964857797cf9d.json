{"ast":null,"code":"import { omit } from \"lodash\";\nimport { type } from \"@testing-library/user-event/dist/type\";\nconst ADD_TO_CART = \"ADD_TO_CART_ONE\";\nconst REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport function addToCart(product) {\n  return {\n    type: ADD_TO_CART,\n    payload: product\n  };\n}\nexport function removeFromCart(product) {\n  return {\n    type: REMOVE_FROM_CART,\n    payload: product\n  };\n}\nfunction cartReducer(state = {\n  items: {}\n}, action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        const product = action.payload;\n        if (state.items[product.id]) {\n          // console.log(state.items[product.id]);\n          return {\n            ...state,\n            items: {\n              ...state.items,\n              [product.id]: {\n                ...state.items[product.id],\n                quantity: state.items[product.id].quantity + 1\n              }\n            }\n          };\n        } else {\n          // console.log(product);\n          return {\n            ...state,\n            items: {\n              ...state.items,\n              [product.id]: {\n                ...product,\n                quantity: 1\n              }\n            }\n          };\n        }\n      }\n    case REMOVE_FROM_CART:\n      {\n        const product = action.payload;\n        if (state.items[product.id].quantity > 1) {\n          return {\n            ...state,\n            items: {\n              ...state.items,\n              [product.id]: {\n                ...state.items[product.id],\n                quantity: state.items[product.id].quantity - 1\n              }\n            }\n          };\n        } else {\n          return {\n            ...state,\n            items: omit(state.items, [product.id])\n          };\n        }\n      }\n    default:\n      return state;\n  }\n}\nexport default cartReducer;","map":{"version":3,"names":["omit","type","ADD_TO_CART","REMOVE_FROM_CART","addToCart","product","payload","removeFromCart","cartReducer","state","items","action","id","quantity"],"sources":["C:/Users/saide/Documents/dev-classes-main/dev-classes-main/src/stores/Cart.js"],"sourcesContent":["import { omit } from \"lodash\";\nimport { type } from \"@testing-library/user-event/dist/type\";\n\nconst ADD_TO_CART = \"ADD_TO_CART_ONE\";\nconst REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n\nexport function addToCart(product){\n    return{\n        type: ADD_TO_CART,\n        payload : product\n    }\n}\nexport function removeFromCart(product){\n    return{\n        type: REMOVE_FROM_CART,\n        payload : product\n    }\n}\n\n\nfunction cartReducer(state={items:{}},action){\n    switch(action.type){\n        case ADD_TO_CART:{\n            const product = action.payload;\n            \n            if(state.items[product.id]){\n                // console.log(state.items[product.id]);\n                return{\n                    ...state,\n                    items:{\n                        ...state.items,\n                        [product.id]:{\n                            ...state.items[product.id],\n                            quantity: state.items[product.id].quantity + 1\n                        }\n                    }\n                }\n            }else{\n                // console.log(product);\n                return{\n                    ...state,\n                    items:{\n                        ...state.items,\n                        [product.id]:{\n                            ...product,\n                            quantity: 1\n                        }\n                    }\n                }\n            }\n        }\n        case REMOVE_FROM_CART:{\n            const product = action.payload;\n            if(state.items[product.id].quantity>1){\n                return{\n                    ...state,\n                    items:{\n                        ...state.items,\n                        [product.id]:{\n                            ...state.items[product.id],\n                            quantity: state.items[product.id].quantity - 1\n                        }\n                    }\n                }\n            }else{\n                return {\n                    ...state,\n                    items: omit(state.items, [product.id])\n                }\n            }\n        }\n        default: \n            return state;\n    }\n}\n\nexport default cartReducer;"],"mappings":"AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,SAASC,IAAI,QAAQ,uCAAuC;AAE5D,MAAMC,WAAW,GAAG,iBAAiB;AACrC,MAAMC,gBAAgB,GAAG,kBAAkB;AAE3C,OAAO,SAASC,SAASA,CAACC,OAAO,EAAC;EAC9B,OAAM;IACFJ,IAAI,EAAEC,WAAW;IACjBI,OAAO,EAAGD;EACd,CAAC;AACL;AACA,OAAO,SAASE,cAAcA,CAACF,OAAO,EAAC;EACnC,OAAM;IACFJ,IAAI,EAAEE,gBAAgB;IACtBG,OAAO,EAAGD;EACd,CAAC;AACL;AAGA,SAASG,WAAWA,CAACC,KAAK,GAAC;EAACC,KAAK,EAAC,CAAC;AAAC,CAAC,EAACC,MAAM,EAAC;EACzC,QAAOA,MAAM,CAACV,IAAI;IACd,KAAKC,WAAW;MAAC;QACb,MAAMG,OAAO,GAAGM,MAAM,CAACL,OAAO;QAE9B,IAAGG,KAAK,CAACC,KAAK,CAACL,OAAO,CAACO,EAAE,CAAC,EAAC;UACvB;UACA,OAAM;YACF,GAAGH,KAAK;YACRC,KAAK,EAAC;cACF,GAAGD,KAAK,CAACC,KAAK;cACd,CAACL,OAAO,CAACO,EAAE,GAAE;gBACT,GAAGH,KAAK,CAACC,KAAK,CAACL,OAAO,CAACO,EAAE,CAAC;gBAC1BC,QAAQ,EAAEJ,KAAK,CAACC,KAAK,CAACL,OAAO,CAACO,EAAE,CAAC,CAACC,QAAQ,GAAG;cACjD;YACJ;UACJ,CAAC;QACL,CAAC,MAAI;UACD;UACA,OAAM;YACF,GAAGJ,KAAK;YACRC,KAAK,EAAC;cACF,GAAGD,KAAK,CAACC,KAAK;cACd,CAACL,OAAO,CAACO,EAAE,GAAE;gBACT,GAAGP,OAAO;gBACVQ,QAAQ,EAAE;cACd;YACJ;UACJ,CAAC;QACL;MACJ;IACA,KAAKV,gBAAgB;MAAC;QAClB,MAAME,OAAO,GAAGM,MAAM,CAACL,OAAO;QAC9B,IAAGG,KAAK,CAACC,KAAK,CAACL,OAAO,CAACO,EAAE,CAAC,CAACC,QAAQ,GAAC,CAAC,EAAC;UAClC,OAAM;YACF,GAAGJ,KAAK;YACRC,KAAK,EAAC;cACF,GAAGD,KAAK,CAACC,KAAK;cACd,CAACL,OAAO,CAACO,EAAE,GAAE;gBACT,GAAGH,KAAK,CAACC,KAAK,CAACL,OAAO,CAACO,EAAE,CAAC;gBAC1BC,QAAQ,EAAEJ,KAAK,CAACC,KAAK,CAACL,OAAO,CAACO,EAAE,CAAC,CAACC,QAAQ,GAAG;cACjD;YACJ;UACJ,CAAC;QACL,CAAC,MAAI;UACD,OAAO;YACH,GAAGJ,KAAK;YACRC,KAAK,EAAEV,IAAI,CAACS,KAAK,CAACC,KAAK,EAAE,CAACL,OAAO,CAACO,EAAE,CAAC;UACzC,CAAC;QACL;MACJ;IACA;MACI,OAAOH,KAAK;EACpB;AACJ;AAEA,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}